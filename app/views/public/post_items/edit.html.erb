<div class="container mt-5">
  <div class="row">
    <div class="col-md-6 mx-auto">
      <h4 class="my-2">商品情報の編集</h4>
      <%= render 'form', post_item: @post_item, url: edit_post_item_path(@post_item), submit: '更新' %>
    </div>
    <div id="map" style="height: 400px; width: 100%;"></div>
  </div>
</div>

<script>
  var map;
  var marker;
  var geocoder;
  
  function initMap() {
    var latitude = <%= @shop.latitude %>;
    var longitude = <%= @shop.longitude %>;
    
    map = new google.maps.Map(document.getElementById("map"), {
      zoom: 16,
      center: { lat: latitude, lng: longitude }
    });
  
    marker = new google.maps.Marker({
      map: map,
      position: { lat: latitude, lng: longitude }
    });
  
    geocoder = new google.maps.Geocoder();
  
    google.maps.event.addListener(map, "click", function(event) {
      marker.setPosition(event.latLng);
      geocodeLatLng(event.latLng);
    });
  }
  
  function geocodeLatLng(latlng) {
    // ジオコーダーを使って住所を検索する
    geocoder.geocode({ location: latlng }, function(results, status) {
      if (status === "OK") {
        if (results[0]) {
          var formattedAddress = results[0].formatted_address;
          // address components取得
          var addressComponents = results[0].address_components;
          // 国と郵便番号のaddress componentsを取り出す
          var country = "";
          var postalCode = "";
          for (var i = 0; i < addressComponents.length; i++) {
            var component = addressComponents[i];
            if (component.types.includes("country")) {
              country = component.long_name;
            }
            if (component.types.includes("postal_code")) {
              postalCode = component.long_name;
            }
          }
          // 国と郵便番号を除く
          formattedAddress = formattedAddress.replace(country, "").replace(postalCode, "").trim();
          // 2番目のaddress component(都道府県)を取得
          var addressComponents = formattedAddress.split(" ");
          if (addressComponents.length > 1) {
            formattedAddress = addressComponents.slice(1).join(" ");
          }
          document.getElementById("address-input").value = formattedAddress;
        } else {
          window.alert("No results found");
        }
      } else {
        window.alert("Geocoder failed due to: " + status);
      }
    });
  }
</script>          
<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['API_KEY'] %>&callback=initMap" async defer></script>  

<script>
  $(function() {
    $("#search-shop-btn").click(function() {
      var shopName = $("#search_shop_name").val();
      var geocoder = new google.maps.Geocoder();
      geocoder.geocode({ address: shopName }, function(results, status) {
        if (status === "OK") {
          var location = results[0].geometry.location;
          map.setCenter(location);
          marker.setPosition(location);
          geocodeLatLng(location);
        } else {
          window.alert("店名が見つかりませんでした。");
        }
      });
    });
  });
</script>